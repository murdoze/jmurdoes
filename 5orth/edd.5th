\ ************
\ Block editor
\ ************

\ Shortcuts

: let constant ;
: var ( v "name" -- ) create , does> ;

\ Blocks

1024 let blks#
1024 let blk-size
64 let line-size
blk-size line-size / let lines-in-block
blks# blk-size * let blk-area

create block0 blk-area allot
block0 blk-area bl fill
block0 var current-blk

: block ( n -- a ) blk-size * block0 + current-blk ! ;
: line ( n -- n*line-len ) line-size * ;

: b! ( c a -- ) \ sets character at given offset relative to current block
  current-blk + c! ;


\ Block file I/O

0 value blk-fd

: open-blk ( addr u -- )  r/w open-file throw to blk-fd ;
: read-blk ( -- ) block0 blk-area blk-fd read-file throw ;
: write-blk ( -- ) block0 blk-area blk-fd write-file throw ;
: close-blk ( -- ) blk-fd close-file throw -1 to blk-fd ;

s" data.blk" open-blk read-blk cr cr . cr cr

: wb ( -- ) \ write blocks 
  write-blk close-blk 
  bye ;

\ Screen eddittor

require unicode.5th
require colors.5th

40 var edd-x
5 var edd-y

: .screen ( -- )
  edd-x @ edd-y @  at 
  line-size 2 + lines-in-block yellow reverse b-win
  norm white home

  current-blk @
  cr
  lines-in-block 0 do
    edd-x @ 1+ edd-y @ 1+ i + at
    i green hex . decimal norm
    dup line-size 1- type 
    green [char] | emit norm 
    line-size +
  loop
  cr
;

\ Eddittor Edd

0 var edd-row
0 var edd-col

: cursor-show
    edd-row @ edd-y @ +
    edd-col @ edd-x @ +
    swap at
;

\ Eddittor Actions

: edd-quit 
  r> drop ;

: cursor-left
  -1 edd-col +!
;

: cursor-right
  1 edd-col +!
;

create edd-actions
  char Q , ' edd-quit ,
  char h , ' cursor-left ,
  char l , ' cursor-right ,
  0      , 

: edd-process ( key -- )
  edd-actions
  cr cr
  begin				( key ea --)
    yellow .s cr norm
    dup @ 
    white .s cr norm
    rot dup
    red .s cr norm
    0= 
    if leave then      ( key ea ch -- )
    over over
    green .s cr norm
    key drop

    = if ( ea key -- )
      red ." EXECUTE! " norm cr
      drop cell + @ 
      execute     ( ea+cell -- )
      leave
    else
      swap drop swap
      blue .s cr norm
      cell + cell + 
      blue .s cr norm
    then
  again
;

\ Y <2> 49 140167513520872 
\ W <3> 49 140167513520872 81 
\ W <4> 140167513520872 49 49 81 
\ G <3> 140167513520872 49 49

: edd
  begin
    cursor-show
    key 
    edd-process 
  again
;

clear
edd

